          var map = {
              legend: [1, '<fieldset>', '</fieldset>'],
              tr: [2, '<table><tbody>', '</tbody></table>'],
              col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
              _default: [0, '', '']
          };

          map.td =
              map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

          map.option =
              map.optgroup = [1, '<select multiple="multiple">', '</select>'];

          map.thead =
              map.tbody =
              map.colgroup =
              map.caption =
              map.tfoot = [1, '<table>', '</table>'];

          map.text =
              map.circle =
              map.ellipse =
              map.line =
              map.path =
              map.polygon =
              map.polyline =
              map.rect = [1, '<svg xmlns="http://www.w3.org/2000/svg" version="1.1">', '</svg>'];

          /**
           * Parse `html` and return a DOM Node instance, which could be a TextNode,
           * HTML DOM Node of some kind (<div> for example), or a DocumentFragment
           * instance, depending on the contents of the `html` string.
           *
           * @param {String} html - HTML string to "domify"
           * @param {Document} doc - The `document` instance to create the Node for
           * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance
           * @api private
           */

          function parse(html, doc) {
              if ('string' != typeof html) throw new TypeError('String expected');

              // default to the global `document` object
              if (!doc) doc = document;

              // tag name
              var m = /<([\w:]+)/.exec(html);
              if (!m) return doc.createTextNode(html);

              html = html.replace(/^\s+|\s+$/g, ''); // Remove leading/trailing whitespace

              var tag = m[1];

              // body support
              if (tag == 'body') {
                  var el = doc.createElement('html');
                  el.innerHTML = html;
                  return el.removeChild(el.lastChild);
              }

              // wrap map
              var wrap = map[tag] || map._default;
              var depth = wrap[0];
              var prefix = wrap[1];
              var suffix = wrap[2];
              var el = doc.createElement('div');
              el.innerHTML = prefix + html + suffix;
              while (depth--) el = el.lastChild;

              // one element
              if (el.firstChild == el.lastChild) {
                  return el.removeChild(el.firstChild);
              }

              // several elements
              var fragment = doc.createDocumentFragment();
              while (el.firstChild) {
                  fragment.appendChild(el.removeChild(el.firstChild));
              }

              return fragment;
          }

          function cleanPopup() {
              var lightbox = document.getElementById('light');
              document.getElementById('light').style.display = 'none';
              document.getElementById('fade').style.display = 'none';
              var node = document.createElement("a");
              node.setAttribute("class", "textright");
              node.setAttribute("onclick", "cleanPopup()");
              var textnode = document.createTextNode("Close");
              node.appendChild(textnode);
              lightbox.innerHTML = "";
              lightbox.appendChild(node);

          }

          function popup() {
              document.getElementById('light').style.display = 'block';
              document.getElementById('fade').style.display = 'block';
          }

        function pullArtifact(url, timestamp, user, setting, servicearea, population) {
              url = url.replace("http://ld.nice.org.uk/", window.location.href);
              var xmlHttp = new XMLHttpRequest();
              xmlHttp.open("GET", url, false);
              xmlHttp.setRequestHeader("Accept", "text/html");
              xmlHttp.send(null);


              var body = xmlHttp.responseText;
              var link = document.createElement("link");
              link.setAttribute("type", "text/css");
              link.setAttribute("href", "style.css");
              link.setAttribute("rel", "stylesheet");

              document.getElementsByTagName("head")[0].appendChild(link);
              var lbox = document.getElementById("light");
              var tags = parse(
                "<div>" +
                "<strong>Generated by: " +
                user + " on: " + timestamp +
                "</strong>" +
                "<div><h4>Settings</h4>" + setting + "</h4></div>" +
                "<div><h4>Population</h4>" + population + "</h4></div>" +
                "<div><h4>Service areas</h4>" + servicearea + "</h4></div>" +
                "<div>" + body + "</div>" +
                "</div>");
                lbox.appendChild(tags);

              popup();
          }

          function concat(xs) {
              var r = "";
              for (var i = 0; i != xs.length; i++) {
                  r = r + xs[i] + "\n";
              }
              return r;
          }

          function formEncode(data) {
              var urlEncodedData = "",
                  urlEncodedDataPairs = [];
              for (var name in data) {
                  urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));
              }

              urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');

              return urlEncodedData;
          }

          function query(q) {
              var homeUrl = window.location.href.slice(0, -6);
              var queryUrl = homeUrl + ':5820/annex/nice/sparql/query';
              var xmlHttp = new XMLHttpRequest();
              xmlHttp.open("POST", queryUrl,false);
              xmlHttp.setRequestHeader("Accept", "application/ld+json");
              xmlHttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
              xmlHttp.setRequestHeader("Authorization","Basic YWRtaW46YWRtaW4=");
              var encoded = formEncode({"query":q,"reasoning":true});

              xmlHttp.send(encoded);
              return JSON.parse(xmlHttp.responseText);
          }

          function getAnnotations(uri) {
              return concat(["construct {",
                  "?ann rdfs:label ?lbl .",
                  "}",
                  "from <http://ld.nice.org.uk/ns>",
                  "where {",
                  "?ann rdfs:label ?lbl .",
                  "?ann rdfs:subClassOf <" + uri + "> . ",
                  "}",
                  "order by ?lbl"
              ]);
          }

          function annotationDataList(id, uri) {
              var list = document.getElementById(id),
                  ax = query(getAnnotations(uri));
              for (var i = 0; i != ax.length; i++) {
                  list.appendChild(parse("<option value='" + ax[i]["http://www.w3.org/2000/01/rdf-schema#label"][0]["@value"] + "' data='" + ax[i]["@id"] + "'>"));
              }
          }


          function acConstraint(id, uri) {
              var ctl = document.getElementById(id);
              var lblid = id.replace("-","");
              if (ctl.value) {
                  return concat([
                      "?qs <" + uri + "> ?anl" + lblid + " . ",
                      '?anl' + lblid + " rdfs:label ?lbl" + lblid + " .",
                      "filter regex(?lbl" + lblid + ',"' + ctl.value + '")'
                  ]);
              }
              return "";
          }

          function getStandards(setting) {
              return concat(["construct {",
                  "?qs prov:specializationOf ?externalUri .",
                  "?qs prov:wasGeneratedBy ?commit .",
                  "?commit prov:wasAssociatedWith ?user .",
                  "?commit prov:startedAtTime ?time .",
                   "?qs prov:alternateOf ?alt .",
                   "?qs <http://ld.nice.org.uk/settingtag> ?setting .",
                   "?qs <http://ld.nice.org.uk/populationtag> ?population .",
                   "?qs <http://ld.nice.org.uk/serviceareatag> ?servicearea .",
                  "}",
                  "from <http://ld.nice.org.uk/prov>",
                  "from <http://ld.nice.org.uk/ns>",
                  "from <http://ld.nice.org.uk/>",
                  "where {",
                  "?qs prov:specializationOf ?externalUri .",
                  "?qs prov:wasGeneratedBy ?commit .",
                  acConstraint("setting-query", "http://ld.nice.org.uk/ns/qualitystandard#setting"),
                  acConstraint("agegroup-query", "http://ld.nice.org.uk/ns/qualitystandard#targetPopulation"),
                  acConstraint("lifestylecondition-query", "http://ld.nice.org.uk/ns/qualitystandard#targetPopulation"),
                  acConstraint("servicearea-query", "http://ld.nice.org.uk/ns/qualitystandard#serviceArea"),
                  acConstraint("conditiondisease-query", "http://ld.nice.org.uk/ns/qualitystandard#targetPopulation"),
                  "?commit prov:startedAtTime ?time .",
                  "?commit prov:wasAssociatedWith ?user .",
                  "optional {?qs prov:alternateOf ?alt . ?alt <http://purl.org/dc/terms/format> <http://purl.org/NET/mediatypes/text/html> . }",
                  "optional {?qs <http://ld.nice.org.uk/ns/qualitystandard#setting>/rdfs:label ?setting .}",
                  "optional {?qs <http://ld.nice.org.uk/ns/qualitystandard#targetPopulation>/rdfs:label ?population .}",
                  "optional {?qs <http://ld.nice.org.uk/ns/qualitystandard#serviceArea>/rdfs:label ?serviceArea .} ",
                  "} order by desc(?time)"
              ]);
          }

          function updateStandards() {
              var generatedBy = {};
              var generatedUser = {};
              var setting = [];
              var population = [];
              var servicearea = [];

              var homeUrl = window.location.href.slice(0, -6);

              var artifactUrl = homeUrl + ':1234/';

              document.getElementById("statements").innerHTML = "<h3>Loading</h3>";
              var json = query(getStandards());
              var element = document.getElementById('response');

              document.getElementById("statements").innerHTML = "";

              for (var i = 0; i < json.length; i++) {
                  var result = json[i];
                  for (var key in json[i]) {
                      //create k/v lookup for commmit time
                      if (key === 'http://www.w3.org/ns/prov#startedAtTime') {
                          var genByUser = 'http://www.w3.org/ns/prov#wasAssociatedWith';
                          var commit = result["@id"];
                          var time = result[key][0];
                          generatedBy[commit] = time["@value"];
                          var user = result[genByUser][0];
                          generatedUser[commit] = user["@id"];
                      }

                      if (key === 'http://ld.nice.org.uk/settingtag')
                      {
                          var currentDoc = json[i];
                          for (var keys in currentDoc["http://ld.nice.org.uk/settingtag"])
                          {
                              var doc = currentDoc["http://ld.nice.org.uk/settingtag"];
                              var keys = doc[keys];
                              setting.push(keys["@value"]);
                          }
                      }

                      if (key === 'http://ld.nice.org.uk/populationtag')
                      {
                          var currentDoc = json[i];
                          for (var keys in currentDoc["http://ld.nice.org.uk/settingtag"])
                          {
                              var doc = currentDoc["http://ld.nice.org.uk/settingtag"];
                              var keys = doc[keys];
                              population.push(keys["@value"]);
                          }
                      }

                      if (key === 'http://ld.nice.org.uk/serviceareatag')
                      {
                          var currentDoc = json[i];
                          for (var keys in currentDoc["http://ld.nice.org.uk/settingtag"])
                          {
                              var doc = currentDoc["http://ld.nice.org.uk/settingtag"];
                              var keys = doc[keys];
                              servicearea.push(keys["@value"]);
                          }
                      }

                      if (key === 'http://www.w3.org/ns/prov#alternateOf') {

                          //horrible lookahead for generatedBy
                          var genByKey = 'http://www.w3.org/ns/prov#wasGeneratedBy';
                          var commitBy = result[genByKey];
                          var hash = commitBy[0]["@id"];

                          var altOf = result[key][0];
                          var listItem = document.createElement("li");
                          var node = document.createElement("a");
                          var extractor =  /.*\/qs(.*)\/st(.*).*\//;

                          var matches = extractor.exec(result["@id"]);
                          node.onclick = (function(setting,servicearea,population) {
                              var alt = altOf['@id'],
                                  gen = generatedBy[hash],
                                  user = generatedUser[hash],
                                  settings = setting.join(),
                                  serviceareas = servicearea.join(),
                                  populations = population.join();
                              return function() {
                                  pullArtifact(alt,gen,user, settings, serviceareas, populations);
                              };})(setting,servicearea,population);
                          var textnode = document.createTextNode("Quality Standard " + matches[1] + " Statement " + matches[2]);
                          node.appendChild(textnode);
                          listItem.appendChild(node);
                          document.getElementById("statements").appendChild(listItem);
                          setting = [];
                          population = [];
                          servicearea = [];
                     }

                  }
              }
          }

          annotationDataList("setting", "http://ld.nice.org.uk/ns/qualitystandard/setting#Setting");
          annotationDataList("agegroup", "http://ld.nice.org.uk/ns/qualitystandard/agegroup#AgeGroup");
          annotationDataList("conditiondisease", "http://ld.nice.org.uk/ns/qualitystandard/conditiondisease#ConditionDisease");
          annotationDataList("lifestylecondition", "http://ld.nice.org.uk/ns/qualitystandard/lifestylecondition#LifestyleCondition");
          annotationDataList("servicearea", "http://ld.nice.org.uk/ns/qualitystandard/servicearea#ServiceArea");

          document.getElementById("setting-query").onchange = function(e) {
              updateStandards();
          };
          document.getElementById("agegroup-query").onchange = function(e) {
              updateStandards();
          };
          document.getElementById("conditiondisease-query").onchange = function(e) {
              updateStandards();
          };
          document.getElementById("lifestylecondition-query").onchange = function(e) {
              updateStandards();
          };
          document.getElementById("servicearea-query").onchange = function(e) {
              updateStandards();
          };

          updateStandards();
